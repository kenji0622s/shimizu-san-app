steps:
  # ✅ Step 1: Docker Build（環境変数を埋め込む）
  - id: "docker-build"
    name: "gcr.io/cloud-builders/docker"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        echo "NEXTAUTH_SECRET=${_NEXTAUTH_SECRET}" >> .env
        echo "DATABASE_URL=${_DATABASE_URL}" >> .env
        docker build \
          --build-arg NEXTAUTH_SECRET=${_NEXTAUTH_SECRET} \
          --build-arg DATABASE_URL=${_DATABASE_URL} \
          -f Dockerfile -t gcr.io/$PROJECT_ID/next-template:$COMMIT_SHA .

  # ✅ Step 2: Docker Push
  - id: "docker-push"
    name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/$PROJECT_ID/next-template:$COMMIT_SHA"]

  # ✅ Step 3: Cloud Run Deploy
  - id: "deploy-to-run"
    name: "gcr.io/cloud-builders/gcloud"
    args:
      - "run"
      - "deploy"
      - "next-template"
      - "--image"
      - "gcr.io/$PROJECT_ID/next-template:$COMMIT_SHA"
      - "--region"
      - "asia-northeast1"
      - "--allow-unauthenticated"
      - "--set-env-vars"
      - "NEXTAUTH_SECRET=${_NEXTAUTH_SECRET},DATABASE_URL=${_DATABASE_URL}"

  # ✅ Step 4: Prisma Migration（Cloud SQL Proxyなし）
  - id: "migration"
    name: "gcr.io/$PROJECT_ID/next-template:$COMMIT_SHA"
    entrypoint: npx
    args: ["prisma", "migrate", "deploy"]
    env:
      - "DATABASE_URL=${_DATABASE_URL}"
    dir: prisma # schema.prisma があるディレクトリに合わせて調整

images:
  - "gcr.io/$PROJECT_ID/next-template:$COMMIT_SHA"

options:
  logging: CLOUD_LOGGING_ONLY
  dynamic_substitutions: true
  pool:
    name: "projects/$PROJECT_ID/locations/asia-northeast1/workerPools/shimizu-private-pool"

substitutions:
  _IMAGE_NAME: gcr.io/${PROJECT_ID}/next-template
  _NEXTAUTH_SECRET: your-secret-here
  _DATABASE_URL: mysql://root:password@10.10.1.3:3306/cdemart
